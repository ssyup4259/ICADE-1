<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.mybatis.replyMapper">

<!-- bc_num의 최댓값 -->
<select id="replyMaxNum" resultType="int">
	select nvl(max(BC_NUM), 0) from board_comment
</select>

<!-- 댓글 입력 -->
<insert id="insertData" parameterType="com.project.dto.BoardCommentDTO">
insert into board_comment(BC_NUM,BC_BOARD,BC_ID,BC_DATE,BC_PARENT,BC_CONTENT,BC_IMAGE,BC_SAVEFILENAME,BC_CONTENTFILE1,BC_CONTENTFILE2,BC_CONTENTFILE3,BC_SAVE1,BC_SAVE2,BC_SAVE3,BC_SUBJECT) 
values(#{BC_NUM},#{BC_BOARD},#{BC_ID},sysdate,#{BC_PARENT},#{BC_CONTENT},#{BC_IMAGE,jdbcType=VARCHAR},#{BC_SAVEFILENAME,jdbcType=VARCHAR},#{BC_CONTENTFILE1,jdbcType=VARCHAR},#{BC_CONTENTFILE2,jdbcType=VARCHAR},
#{BC_CONTENTFILE3,jdbcType=VARCHAR},#{BC_SAVE1,jdbcType=VARCHAR},
#{BC_SAVE2,jdbcType=VARCHAR},#{BC_SAVE3,jdbcType=VARCHAR},#{BC_SUBJECT,jdbcType=VARCHAR})
</insert>

<!-- 댓글 리스트 -->
<select id="listData" parameterType="hashMap" resultType="com.project.dto.BoardCommentDTO" >
	SELECT * FROM (SELECT  ROWNUM AS rnum, data.* FROM 
	(SELECT LEVEL,BC_NUM,BC_BOARD,BC_ID,to_char(BC_DATE, 'YYYY-MM-DD') BC_DATE,BC_PARENT,BC_CONTENT,BC_IMAGE,BC_SAVEFILENAME,BC_CONTENTFILE1,BC_CONTENTFILE2,BC_CONTENTFILE3,BC_SAVE1,BC_SAVE2,BC_SAVE3,BC_SUBJECT FROM BOARD_COMMENT
	WHERE BC_BOARD = #{BC_BOARD} START WITH BC_PARENT =0
	CONNECT BY NOCYCLE PRIOR BC_NUM = BC_PARENT ORDER SIBLINGS BY BC_NUM DESC) data)
<![CDATA[
	where rnum >= #{start} and rnum <= #{end}
]]>
</select>

<!-- 하나의 데이터 읽어오기 -->
<select id="readData" parameterType="int" resultType="com.project.dto.BoardCommentDTO">
select BC_NUM,BC_BOARD,BC_ID,BC_DATE,BC_PARENT,BC_CONTENT,BC_IMAGE,BC_SAVEFILENAME,BC_CONTENTFILE1,BC_CONTENTFILE2,BC_CONTENTFILE3,BC_SAVE1,BC_SAVE2,BC_SAVE3,BC_SUBJECT from board_comment where BC_NUM = #{BC_NUM}
</select>

<!-- 댓글 업데이트 -->
<update id="updateData" parameterType="com.project.dto.BoardCommentDTO">
update board_comment set BC_DATE = sysdate,BC_CONTENT =#{BC_CONTENT},BC_IMAGE =#{BC_IMAGE},
BC_SAVEFILENAME=#{BC_SAVEFILENAME},BC_CONTENTFILE1 =#{BC_CONTENTFILE1,jdbcType=VARCHAR},BC_CONTENTFILE2=#{BC_CONTENTFILE2,jdbcType=VARCHAR},
BC_CONTENTFILE3= #{BC_CONTENTFILE2,jdbcType=VARCHAR}, BC_SAVE1= #{BC_SAVE1,jdbcType=VARCHAR}, BC_SAVE2= #{BC_SAVE2,jdbcType=VARCHAR}, 
BC_SAVE3 = #{BC_SAVE3,jdbcType=VARCHAR}, BC_SUBJECT = #{BC_SUBJECT} where BC_NUM =#{BC_NUM}
</update>

<!--  댓글 삭제 -->
<delete id="deleteData" parameterType="int">
delete board_comment where BC_NUM = #{BC_NUM}
</delete>

<!-- 댓글 개수 구하기 -->
<select id="countReply" parameterType="int" resultType="int">
select count(*) from board_comment where BC_BOARD = #{BC_BOARD}
</select>

<!-- 댓글 전체 갯수 구하기 -->
<select id="countAllReply" resultType="int">
select count(*) from board_comment
</select>


<!-- 전체 댓글 출력 -->
<select id="replyAllList" parameterType="hashMap" resultType="com.project.dto.BoardCommentDTO">
	select * from(
	select rownum rnum,data.* from(
	select BC_NUM,BC_BOARD,BC_ID,TO_CHAR(BC_DATE,'YYYY-MM-DD') BC_DATE,BC_PARENT,BC_CONTENT,BC_IMAGE,
	BC_SAVEFILENAME,BC_CONTENTFILE1,BC_CONTENTFILE2,
	BC_CONTENTFILE3,BC_SAVE1,BC_SAVE2,BC_SAVE3,BC_SUBJECT,G_NUM,G_NAME
	FROM BOARD_COMMENT,(select g_name,g_num from goods) WHERE BC_BOARD = G_NUM AND BC_PARENT =0)data)
<![CDATA[
	where rnum >= #{start} and rnum <= #{end}
]]>
</select>

<!-- 하나의 댓글정보 읽어오기 -->
<select id="readOne" parameterType="int" resultType="com.project.dto.BoardCommentDTO">
select BC_NUM,BC_BOARD,BC_ID,BC_DATE,BC_PARENT,BC_CONTENT,BC_IMAGE,BC_SAVEFILENAME,BC_CONTENTFILE1,
BC_CONTENTFILE2,BC_CONTENTFILE3,BC_SAVE1,BC_SAVE2,BC_SAVE3,BC_SUBJECT ,G_NUM,G_NAME
from board_comment,(select g_name,g_num from goods) where BC_NUM = #{BC_NUM} AND BC_BOARD = G_NUM
</select>

<!-- 날짜순으로 이전글 다음글 설정하기  -->
<select id="readSubject" parameterType="int" resultType="com.project.dto.BoardCommentDTO">
	
	select
	    BC_NUM,
	    next_BC_NUM,
	    next_BC_SUBJECT,
	    prev_BC_NUM,
	    prev_BC_SUBJECT
	from
	(
	    select BC_NUM,
	    lead (BC_NUM,1) over (order by BC_DATE) next_BC_NUM,
	    lead (BC_SUBJECT,1) over (order by BC_DATE) next_BC_SUBJECT,
	    lag (BC_NUM,1) over (order by BC_DATE) prev_BC_NUM,
	    lag (BC_SUBJECT,1) over (order by BC_DATE) prev_BC_SUBJECT
	    from BOARD_COMMENT
	    order by BC_DATE desc
	)
	where BC_NUM = #{BC_NUM}
</select>

<!-- 대댓글 리스트 가져오기 -->
<select id="readReply" parameterType="int" resultType="com.project.dto.BoardCommentDTO">
			select BC_BOARD,BC_NUM,BC_DATE,BC_CONTENT,BC_PARENT,BC_ID,G_NUM from board_comment,(select g_num from goods)
		    where BC_BOARD =G_NUM AND  BC_PARENT =#{BC_NUM}
         	
</select>

</mapper>