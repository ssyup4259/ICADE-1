<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.mybatis.adminMapper">

<!-- GoodsNum의 최댓값 -->
<select id="goodsMaxNum" resultType="int">
	select nvl(max(G_NUM), 0) from Goods
</select>

<!-- 상품 종류 리스트 -->
<select id="getGoodsKind" resultType="com.project.dto.GoodsKindDTO">
	select GK_NUM, GK_KIND from GOODS_KIND
</select>

<!-- 지원기종 리스트 -->
<select id="getDevice" resultType="com.project.dto.DeviceKindDTO">
	select DK_CODE, DK_NAME from DEVICE_KIND
</select>

<!-- 색상 리스트 -->
<select id="getColor" resultType="com.project.dto.GoodsColorDTO">
	select GC_CODE, GC_COLOR from GOODS_COLOR
</select>

<!-- 상품 등록 -->
<insert id="insertGoods" parameterType="com.project.dto.GoodsDTO">
	insert into goods(G_NUM, G_NAME, G_COUNT, G_PRICE, G_SELLCOUNT, G_CONTENT, G_DISCOUNT, G_PHOTO, G_SAVEFILENAME)
		values(#{G_NUM}, #{G_NAME}, 0, #{G_PRICE}, 0, #{G_CONTENT}, #{G_DISCOUNT}, #{G_PHOTO}, #{G_SAVEFILENAME})
</insert>

<!-- 상세상품 등록 -->
<insert id="insertGoodsDetail" parameterType="com.project.dto.GoodsDetailDTO">
	insert into goods_detail(GD_NUM, GD_CODE, GD_KIND_NUM, GD_DEVICE, GD_COLOR, GD_COUNT, GD_SELLCOUNT)
		values(#{GD_NUM}, #{GD_CODE}, #{GD_KIND_NUM}, #{GD_DEVICE}, #{GD_COLOR}, #{GD_COUNT}, 0)
</insert>

<!-- 상세상품 등록 후 Goods테이블의 상품 총 갯수 수정 -->
<update id="updateGoodsCount" parameterType="com.project.dto.GoodsDTO">
	update Goods set G_COUNT = #{G_COUNT} where G_NUM = #{G_NUM}
</update>

<!-- 전체 데이터 갯수 -->
<select id="getGoodsCount" parameterType="hashMap" resultType="int">
	select nvl(count(*), 0) from GOODS
	where ${searchKey} like '%' || #{searchValue} || '%'
</select>

<!-- 상품 리스트 출력 -->
<select id="getGoodsLists" parameterType="hashMap" resultType="com.project.dto.GoodsDTO">
	select * from (
	select rownum rnum, data.* from (
	select DISTINCT G_NUM, GD_KIND_NUM, GK_KIND, G_NAME, G_COUNT, G_PRICE, G_SELLCOUNT, G_CONTENT, G_DISCOUNT, G_PHOTO, G_SAVEFILENAME
	from GOODS, (select GD_NUM, GD_KIND_NUM from GOODS_DETAIL), (select GK_NUM, GK_KIND from GOODS_KIND)
	where ${searchKey} like '%' || #{searchValue} || '%' and G_NUM = GD_NUM and GD_KIND_NUM = GK_NUM order by G_NUM desc) data)
<![CDATA[
	where rnum >= #{start} and rnum <= #{end}
]]>
</select>

<!-- 한개의 데이터 -->
<select id="getReadGoods" parameterType="int" resultType="com.project.dto.GoodsDTO">
	select G_NUM, G_NAME, G_COUNT, G_PRICE, G_SELLCOUNT, G_CONTENT, G_DISCOUNT, G_PHOTO, G_SAVEFILENAME
	from GOODS where G_NUM = #{G_NUM}
</select>

<!-- 상품 수정 -->
<update id="updateGoods" parameterType="com.project.dto.MemberDTO">
	
</update>

<!-- 상품 삭제 -->
<delete id="deleteGoods" parameterType="String">
	delete Goods where G_CODE = #{G_CODE}
</delete>


</mapper>